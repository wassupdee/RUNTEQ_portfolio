# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "auto test and deploy"
on:
  push:
  workflow_dispatch:

jobs:
  rspec:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10
      chrome:
        image: seleniarm/standalone-chromium:latest
        ports:
          - 4445:4444
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install libvips
        run: |
          sudo apt-get update
          sudo apt-get install -y libvips

      - name: Bundler and gem install
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: Set environment variables
        run: |
          echo "OPENAI_ACCESS_TOKEN=${{ secrets.OPENAI_ACCESS_TOKEN }}" >> $GITHUB_ENV
          echo "LINE_CHANNEL_ID_LOGIN=${{ secrets.LINE_CHANNEL_ID_LOGIN }}" >> $GITHUB_ENV
          echo "LINE_CHANNEL_SECRET_LOGIN=${{ secrets.LINE_CHANNEL_SECRET_LOGIN }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "SELENIUM_DRIVER_URL=${{ secrets.SELENIUM_DRIVER_URL }}" >> $GITHUB_ENV

      - name: Precompile assets
        run: |
          bundle exec rake assets:precompile RAILS_ENV=test

      - name: Yarn install
        run: yarn install --check-files

      - name: Database create and migrate
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test

      - name: Run rspec
        run: bundle exec rspec

      - name: Archive Capybara screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: capybara-screenshots
          path: tmp/capybara

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.3
          bundler-cache: true

      - name: Bundler and gem install
        run: |
          gem install bundler
          bundle install

      - name: Run rubocop
        run: bundle exec rubocop
